name: CI

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      POSTGRES_USER: test_db
      POSTGRES_PASSWORD: test_db
      POSTGRES_DB: test_db
    steps:
      - uses: actions/checkout@v1
      - name: Setup test envfile
        run: touch .envfile
      - name: Build the docker-compose stack
        run: docker-compose up -d
      - name: Check running containers
        run: docker ps -a
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_PORT_5432_TCP_ADDR: localhost
      POSTGRES_USER: test_db
      POSTGRES_PASSWORD: test_db
      POSTGRES_DB: test_db
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.1
      - name: Setup test envfile
        run: touch .envfile
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
      - name: Run tests
        run: cd src && python manage.py test --settings=jobs.settings.test

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: test_db
          POSTGRES_PASSWORD: test_db
          POSTGRES_DB: test_db
        ports:
          - 5432:5432

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/master'
    env:
      DEPLOY_HOST: ${{secrets.DEPLOY_HOST}}
      ENVFILE: ${{secrets.ENVFILE}}
      PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
    steps:
      - uses: actions/checkout@v1
      - name: Install utilities
        run: |
          which rsync || ( apt-get update && apt-get install rsync )
          which zip || ( apt-get update && apt-get install zip )
          which ssh-agent || ( apt-get update && apt-get install openssh-client )
      - name: Setup ssh key
        run: |
          mkdir -p ~/.ssh/
          echo "${PRIVATE_KEY}" > ../private.key
          sudo chmod 600 ../private.key
          ssh-keyscan -H ${DEPLOY_HOST} >> ~/.ssh/known_hosts
      - name: Update remote project files
        run: |
          ssh -i ../private.key user@${DEPLOY_HOST} "rm -rf ~/dj && mkdir -p ~/dj"
          rsync -avz --exclude=.git -e "ssh -i ../private.key" . user@${DEPLOY_HOST}:~/dj
      - name: Create envfile
        run: |
          ssh -i ../private.key user@${DEPLOY_HOST} "touch .envfile"
          echo ${ENVFILE} | ssh -i ../private.key user@${DEPLOY_HOST} "tr ' ' '\n' | cat > dj/.envfile"
      - name: Run docker-compose
        run: |
          ssh -i ../private.key user@${DEPLOY_HOST} "cd dj && chmod +x container-utility.sh && bash container-utility.sh --reset"
          ssh -i ../private.key user@${DEPLOY_HOST} "cd dj && docker-compose up -d --build"
