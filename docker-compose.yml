version: '3.7'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: aggregator
    hostname: web
    command: sh -c "python manage.py collectstatic --noinput && python manage.py migrate --noinput && hypercorn jobs.asgi:application -m 777 --workers 1 --bind unix:/app/jobs.sock"
    volumes:
      - ./src:/app
    env_file:
      - .envfile
    links:
      - db
    depends_on:
      - db
    restart: always
    container_name: web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"

  db:
    image: postgres:12-alpine
    env_file:
      - .envfile
    volumes:
      - db-data:/var/lib/postgresql/data
    container_name: db
    expose:
      - '5432'
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '1'

  celery:
    image: aggregator
    working_dir: /app
    command: sh -c "celery -A jobs.celery worker -l info"
    volumes:
      - ./src:/app
    env_file:
      - .envfile
    links:
      - db
      - redis
    depends_on:
      - redis
      - web
    restart: always
    container_name: celery
    logging:
      driver: "json-file"
      options:
        max-size: '10m'
        max-file: '1'

  celery_beat:
    image: aggregator
    working_dir: /app
    command: sh -c "celery -A jobs.celery beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./src:/app
    env_file:
      - .envfile
    links:
      - db
      - redis
    depends_on:
      - redis
      - web
    restart: always
    container_name: beat
    logging:
      driver: "json-file"
      options:
        max-size: '10m'
        max-file: '1'

  redis:
    image: redis:alpine
    working_dir: /data
    expose:
      - '6379'
    volumes:
      - /data:/data
    container_name: redis
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '1'

  nginx:
    restart: unless-stopped
    image: jonasal/nginx-certbot:latest-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .envfile
    volumes:
      - ./src:/app
      - ./nginx:/etc/nginx/user_conf.d:ro
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"

volumes:
  db-data:
  redis:
  letsencrypt: